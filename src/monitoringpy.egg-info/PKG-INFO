Metadata-Version: 2.2
Name: monitoringpy
Version: 0.1.0
Summary: A Python package for monitoring function calls and generating execution graphs
Home-page: 
Author: LiveProbes
Author-email: 
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.10
Description-Content-Type: text/markdown
Requires-Dist: jsonpickle
Requires-Dist: graphviz
Dynamic: author
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: requires-dist
Dynamic: requires-python
Dynamic: summary

# MonitoringPy

A Python package for monitoring function calls and generating execution graphs. This package uses Python's sys.monitoring API to track function calls and their relationships, making it easy to visualize program flow.

## Requirements

- Python 3.10 or higher
- Graphviz (for graph generation)

## Installation

```bash
pip install monitoringpy
```

## Usage

1. Create a `monitor_config.json` file in your project directory:

```json
{
    "tool_id": 1,
    "tool_name": "monitoringpy",
    "monitor": {
        "your_file.py": ["function_to_monitor"]
    },
    "output": {
        "file": "data.jsonl"
    }
}
```

2. Import and use the package in your code:

```python
import monitoringpy

# Your code here
# Functions specified in monitor_config.json will be automatically monitored
```

3. Generate execution graph using either:

   a. Python API:
   ```python
   from monitoringpy.generate_graph import generate_dot_graph
   generate_dot_graph("data.jsonl", "execution_graph.dot")
   ```

   b. Command-line interface:
   ```bash
   # Generate DOT file
   monitoringpy-graph data.jsonl

   # Generate DOT file with custom output name
   monitoringpy-graph data.jsonl -o custom_graph.dot

   # Generate both DOT and PNG files
   monitoringpy-graph data.jsonl --png
   ```

## Features

- Function call monitoring
- Argument and return value tracking
- Execution graph generation
- Support for multi-threaded applications
- Global variable tracking
- Command-line interface for graph generation

## License

MIT License 
